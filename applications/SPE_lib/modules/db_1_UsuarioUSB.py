# -*- coding: utf-8 -*-
from gluon import *
def UsuarioUSB_Table(db,T):
    db.define_table('UsuarioUSB',
        Field('auth_User','reference auth_user'),
        Field('username', 'string',
              requires=[IS_NOT_EMPTY(error_message='Es necesario un username.')],
              label='USB ID (*)'),
        Field('first_name','string',
              requires=[IS_NOT_EMPTY(error_message='Es necesario un first_name.') ],
              label = 'Nombre (*)'),
        Field('last_name','string',
              requires=[IS_NOT_EMPTY(error_message='Es necesario un last_name.') ],
              label = 'Apellido (*)'),
        Field('email',
              requires=IS_EMPTY_OR(IS_EMAIL(error_message='Introduzca un email valido.')),
              comment='first_name@mail.com',
              label = 'Email(*)'),
        Field('clave', 'password',
              requires=[IS_NOT_EMPTY(error_message='Es necesaria una clave.'),
                        IS_STRONG(min=10, special=1, upper=1)],
              label = 'Contrase√±a (*)'),
        Field('tipo_documento','reference Tipo_Documento',
              label='Tipo de Documento (*)'),
        Field('numero_documento',
              requires=[IS_MATCH('^[0-9][0-9]*$',
                            error_message='Introduzca una cedula.')],
              label='Numero Documentacion (*)' ),
        Field('telefono',
              requires=IS_MATCH('^\d{4}?[\s.-]?\d{7}$',
              error_message='Numero no valido,ingrese numero telefonico'),
              comment='0212-111111',
              label = 'Telefono(*)'),
        Field('direccion','text',
              label = 'Direccion'),
        Field('sexo',
              requires=IS_IN_SET(['M','F']),
              label = 'Sexo (*)'),
        Field('activo','boolean')
    )
